# Example Nginx config to enable CORS with credentials for your API
# Adjust server_name, upstream and paths to your environment

# This map allows only specific origins and echoes them back. Never use '*'
map $http_origin $cors_origin {
  default "";
  # Origin header never has trailing slash
  "http://localhost:9000"                            $http_origin;
  "https://schedule-app-back-env.eu-west-3.elasticbeanstalk.com"  $http_origin;
  "http://schedule-app-back-env.eu-west-3.elasticbeanstalk.com"   $http_origin;
}

server {
  listen 443 ssl http2;
  server_name schedule-app-back-env.eu-west-3.elasticbeanstalk.com;

  # ... ssl_certificate, ssl_certificate_key, etc.

  # Proxy to your Node backend
  location /api/ {
    proxy_pass http://127.0.0.1:3000;

    # Pass headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # CORS headers
    add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Vary "Origin, Access-Control-Request-Headers" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;

    # Handle preflight quickly
    if ($request_method = OPTIONS) {
      return 204;
    }
  }
}
